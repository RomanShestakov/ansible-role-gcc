---

- name: check if as util was installed before
  stat:
    path: "{{ binutils_install_dir }}/bin/as"
  register: binutils_exists

- name: Get binutils sources
  become: true
  get_url: url={{binutils_url}} dest={{binutils_tmp}} timeout=180
  when: not binutils_exists.stat.exists
  register: binutils_downloaded

- name: Extract binutils sources
  become: true
  unarchive: src={{binutils_tmp}} dest="/tmp" creates={{binutils_build}} remote_src=yes
  when: binutils_downloaded.changed
  register: binutils_extract

- name: Configure binutils
  become: true
  shell: chdir={{binutils_build}} ./configure --prefix={{binutils_install_dir}} --disable-nls --disable-werror
  when: binutils_extract.changed
  register: binutils_configure

- name: Make binutils
  become: true
  shell: chdir={{binutils_build}} make
  when: binutils_configure.changed
  register: binutils_make

- name: Install binutils
  become: true
  shell: chdir={{binutils_build}} make install
  when: binutils_make.changed
  register: binutils_install

- name: cleanup binutils build
  become: true
  file:
    path: "{{ binutils_build }}"
    state: absent
  when: binutils_install.changed

- name: cleanup binutils tmp
  become: true
  file:
    path: "{{ binutils_tmp }}"
    state: absent
  when: binutils_install.changed

# - name: wat
#   debug: msg=ftp://ftp.fu-berlin.de/unix/languages/gcc/releases/gcc-{{gcc_version}}/gcc-{{gcc_version}}.tar.gz
#   when: binutils_install.changed
...
